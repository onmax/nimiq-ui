:root {
  --nq-ease: cubic-bezier(0.25, 0, 0, 1);
  --nq-shadow: 0px 18px 38px rgba(31 35 72 / 0.07), 0px 7px 8.5px rgba(31 35 72 / 0.04), 0px 2px 2.5px rgba(31 35 72 / 0.02);
  --nq-shadow-lg: 0px 6px 20px rgba(59 76 106 / 0.13), 0px 1.34018px 4.46726px rgba(59 76 106 / 0.0774939), 0px 0.399006px 1.33002px rgba(59 76 106 / 0.0525061);
  /* This is the old box-shadox from nimiq-style framework. It stays here for reference */
  /* box-shadow: 0 0.5rem 1.5rem rgba(0, 0, 0, 0.15); */
  /* box-shadow: 0 0.5rem 2.5rem rgba(0, 0, 0, 0.15); */
  --track: rgb(var(--nq-neutral-200));
  --thumb: rgb(var(--nq-neutral-600));
}

*:not(:where(.raw, .raw *)) {
  letter-spacing: 0;
  border-color: rgb(var(--nq-neutral-400));
  outline-color: rgb(var(--nq-blue));
  outline-width: 0;
  overscroll-behavior-x: contain;

  &:is(:not(:where(code, pre))) {
    font-family: Mulish, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
  }

  &:is(code, pre, pre *, code *) {
    font-family: "Fira Code", ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    /* font-size-adjust: from-font;
    TODO
    Remove all font-sizes for Fira Code and instead using font-size-adjust to adjust the font-size to the parent element.
    https://developer.mozilla.org/en-US/docs/Web/CSS/font-size-adjust
    */
  }

  &:is(*, *:before, *:after) {
    box-sizing: inherit;
  }

  &:is(body) {
    box-sizing: border-box;
    -webkit-overflow-scrolling: touch;
    min-width: 300px;
    min-height: 100vh;
    min-height: 100dvh;
    color: rgb(var(--nq-neutral-900));
    background-color: rgb(var(--nq-neutral-0));
  }

  &:is(h1, h2, h3, h4, h5, h6) {
    /* TODO Currently heading is always same font size. Once design system is finished, we need to review it */
    color: rgb(var(--nq-neutral));
    overflow-wrap: break-word;
    text-wrap: balance;
    width: 100%;
    line-height: 1.2;
    max-width: 100%;
    font-weight: bold;
    /* margin: 1em 0; */
    /* text-box-trim: both;
    text-box-edge: cap alphabetic; */
  }

  &:is(h1) {
    font-size: 1.5rem;
  }

  &:is(h2) {
    font-size: 1.25rem;
  }

  &:is(h3) {
    font-size: 1rem;
  }

  &:is(p) {
    line-height: 1.3125;
  }

  small {
    font-size: 0.875rem;
    line-height: 1.2;
    font-weight: 600;
    /* margin: 0.5rem 0; */
  }

  &:is(p, li) {
    text-wrap: pretty;
  }

  /* Hide empty paragraphs. This is mostly for the markdown */
  &:is(p, span):empty {
    display: none;
  }

  &:is(a) {
    cursor: pointer;
  }

  &:is(blockquote p, blockquote p > :is(em, b)) {
    color: rgb(var(--nq-green));
  }

  &:is(code, pre) {
    background-color: rgb(var(--nq-neutral-300));
    color: rgb(var(--nq-neutral-900));
    font-size: 0.9em;
    overflow-x: auto;
    /* Scroll colors */
    --track: rgb(var(--nq-neutral-500));
    --thumb: rgb(var(--nq-neutral-700) / 0.75);
  }

  &:is(code) {
    line-height: 1.875rem;
  }

  /* Links & buttons clickable */
  &:is(a, button:not([disabled])) {
    position: relative;

    @media not all and (hover: hover) {

      &::before,
      &::after {
        content: "";
        position: absolute;
        left: -1rem;
        top: -1rem;
        right: -1rem;
        bottom: -1rem;
      }
    }
  }

  /* TODO Maybe Remove this or move it to utilities */
  .focusable {
    outline-color: rgb(var(--nq-blue));

    &:focus-visible {
      outline: 2px solid;
      outline-offset: 3px;
    }
  }

  * {
    &::-webkit-scrollbar {
      width: 0.6rem;
      height: 0.6rem;
      margin: 2px;
      scrollbar-gutter: stable;

      @media screen and (min-width: 769px) {
        width: 1rem;
        height: 1rem;
      }
    }

    &.scroll-sm::-webkit-scrollbar {
      width: 0.3rem;
      height: 0.3rem;

      @media screen and (min-width: 769px) {
        width: 0.6rem;
        height: 0.7rem;
      }
    }

    &::-webkit-scrollbar-thumb {
      border-radius: 0.3rem;
      background-color: var(--thumb);
      background-clip: padding-box;
      border: 2px transparent solid;
    }

    &::-webkit-scrollbar-track {
      background-color: var(--track);
    }
  }

  input[type="text"],
  textarea {
    font-size: 16px;
    line-height: 1.5;
    padding: 4.5px 14px;
    height: max-content;
    min-width: 128px;

    border-radius: 2px;
    width: 100%;
    background-color: transparent;
    transition: colors 0.2s var(--nq-ease),
      box-shadow 0.1s var(--nq-ease);
    outline: 0;

    --ring-color: rgba(var(--nq-neutral-500));
    --color: rgb(var(--nq-neutral));
    --placeholder-color: rgb(var(--nq-neutral-700));

    box-shadow: 0 0 0 1.5px var(--ring-color);
    color: var(--color);

    &::placeholder {
      color: var(--placeholder-color);
    }

    &:not(.invalid, :user-invalid):is(:hover, :focus) {
      --color: rgb(var(--nq-blue));
      --ring-color: rgba(var(--nq-blue) / 0.3);

      &::placeholder {
        --placeholder-color: rgb(var(--nq-blue) / 0.6);
      }

      &:focus:valid {
        --ring-color: rgba(var(--nq-blue));
      }
    }

    &:is(.invalid, :user-invalid) {
      --color: rgb(var(--nq-orange));
      --ring-color: rgba(var(--nq-orange) / 0.4);

      &::placeholder {
        --placeholder-color: rgb(var(--nq-orange) / 0.7);
      }

      &:hover,
      &:focus {
        --ring-color: rgba(var(--nq-orange));
      }
    }

    &:is(:hover, :focus-visible) {
      outline: 1.5px solid rgba(var(--ring-color));
    }
  }

  textarea {
    --padding: 4px;
    min-height: calc(3lh + 2 * var(--padding));
    max-height: calc(5lh + 2 * var(--padding));
    field-sizing: content;
    padding: var(--padding) calc(var(--padding) + ((1lh - 1ex) / 2));
  }
}
