/* TODO Remove font-size fluid and use dynamic line-height */
body:not(.nq-raw) {

  /* Base styles */
  background-color: rgb(var(--nq-neutral-100) / 1);

  --nq-max-width: 73rem;

  &:not(:where(.nq-no-color, [nq-no-color], .nq-prose, [nq-prose])) {
    color: rgb(var(--nq-neutral-800));
  }

  :not(:has(:is(.nq-raw, [nq-raw], .nq-prose, [nq-prose]) *)):not(:is(.nq-raw, [nq-raw], .nq-prose, [nq-prose]) *) {
    &:where(h1) {
      font-weight: 700;

      *:not(.nq-no-color):not([nq-no-color]):not(.nq-no-color *):not([nq-no-color] *) & {
        color: rgb(var(--nq-neutral));
      }

      max-width: 26ch;
      text-align: left;
      margin: 0;

      --f-font-line-height: 1.2;
      --font-size-min: 40;
      --font-size-max: 48;

      &:where(.nq-heading-lg, [nq-heading-lg]) {
        --font-size-min: 44;
        --font-size-max: 64;
      }

      @media screen and (min-width: 768px) {
        text-align: center;
      }

      &+p {
        margin-top: 24px;
        max-width: 42ch;

        --line-height: 1.5;
        --font-size-min: 20;
        --font-size-max: 22;

        @media screen and (min-width: 768px) {
          text-align: center;
        }
      }
    }

    &:where(h2) {
      font-weight: 700;

      *:not(.nq-no-color):not([nq-no-color]):not(.nq-no-color *):not([nq-no-color] *) & {
        color: rgb(var(--nq-neutral));
      }

      max-width: 33ch;
      margin: 0;

      --font-size-min: 32;
      --font-size-max: 40;
      --line-height: 1.3;

      text-align: left;

      @media screen and (min-width: 768px) {
        text-align: center;
      }

      &+p {
        margin-top: 16px;
        color: rgb(var(--nq-neutral-800) / 0.85);

        max-width: 70ch;

        --line-height: 1.5;
        --font-size-min: 20;
        --font-size-max: 22;

        @media screen and (min-width: 768px) {
          text-align: center;
        }
      }
    }

    &:where(h3) {
      font-weight: 600;
      --line-height: 1.3;
      --font-size-min: 22;
      --font-size-max: 28;

      *:not(.nq-no-color):not([nq-no-color]):not(.nq-no-color *):not([nq-no-color] *) & {
        color: rgb(var(--nq-neutral));
      }

      &+p {
        margin-top: 16px;

        --line-height: 1.5;
        --font-size-min: 18;
        --font-size-max: 20;
      }
    }

    &:where(h4) {
      font-weight: 600;
      --line-height: 1.3;
      --font-size-min: 20;
      --font-size-max: 22;

      /* We change the color except if there is parent that change the color */
      *:not(.nq-no-color):not([nq-no-color]):not(.nq-no-color *):not([nq-no-color] *) & {
        color: rgb(var(--nq-neutral));
      }
    }

    &:where(h1, h2, h3, h4, h1+p, h2+p, h3+p, h4+p) {
      font-size: var(--font-size);
      line-height: var(--line-height);
    }
  }

  :where(section, [data-section]) {
    display: flex;
    flex-direction: column;
    justify-content: center;

    @media screen and (min-width: 769px) {
      align-items: center;
    }

    margin-left: auto;
    margin-right: auto;

    --nq-max-width: calc(100vw - 4rem);

    @media screen and (min-width: 1152px) {
      --nq-max-width: calc(100vw - 9rem);
    }

    @media screen and (min-width: 1440px) {
      --nq-max-width: 73rem;
    }

    &:is(.nq-wide, [nq-wide]) {
      --nq-max-width: none;
      --px: 0;
      width: 100%;
      margin: 0 auto;
      align-items: center;
    }

    padding: var(--pt, 0) var(--px, 0) var(--pb, 0) var(--px, 0);

    >* {
      max-width: var(--nq-max-width);
    }

    --px: 32px;

    @media screen and (min-width: 768px) {
      --px: 64px;
    }

    @media screen and (min-width: 1024px) {
      --px: 72px;
    }

    @media screen and (min-width: 1280px) {
      --px: 80px;
    }

    --pt: 160px;

    @media screen and (min-width: 1024px) {
      --pt: 200px;
    }

    :is(
      &:where(.bg-darkblue, [bg-darkblue]):has(+ :where(section, [data-section]):not(:where(.nq-section-gap, [nq-section-gap])):where(.bg-darkblue, [bg-darkblue])),
      &:where(.bg-darkerblue, [bg-darkerblue]):has(+ :where(section, [data-section]):not(:where(.nq-section-gap, [nq-section-gap])):where(.bg-darkerblue, [bg-darkerblue])),
      &:where(.bg-neutral-100, [bg-neutral-100]):has(+ :where(section, [data-section]):not(:where(.nq-section-gap, [nq-section-gap])):where(.bg-neutral-100, [bg-neutral-100])),
      &:where(.bg-neutral-0, [bg-neutral-0]):has(+ :where(section, [data-section]):not(:where(.nq-section-gap, [nq-section-gap])):where(.bg-neutral-0, [bg-neutral-0]))) {
      --pb: 36px;

      @media screen and (min-width: 1024px) {
        --pb: 48px;
      }

      + :where(section, [data-section]) {
        --pt: 36px;

        @media screen and (min-width: 1024px) {
          --pt: 48px;
        }
      }
    }

    &:where(.bg-darkblue, [bg-darkblue], .bg-darkerblue, [bg-darkerblue]):has(+ :where(section, [data-section]):where(.bg-neutral-100, .bg-neutral-0, [bg-neutral-100], [bg-neutral-0], .nq-section-gap, [nq-section-gap])),
    &:where(.bg-neutral-0, [bg-neutral-0], .bg-neutral-100, [bg-neutral-100]):has(+ :where(section, [data-section]):where(.bg-darkblue, [bg-darkblue], .bg-darkerblue, [bg-darkerblue], .nq-section-gap, [nq-section-gap])),
    &:where(.bg-neutral-0, [bg-neutral-0]):has(+ :where(section, [data-section]):where(.bg-neutral-100, [bg-neutral-100], .bg-darkblue, [bg-darkblue], .bg-darkerblue, [bg-darkerblue], .nq-section-gap, [nq-section-gap])),
    &:where(.bg-darkblue, [bg-darkblue], .bg-neutral-100, [bg-neutral-100], .bg-darkerblue, [bg-darkerblue]):has(+ :where(section, [data-section]):where(.bg-neutral-0, [bg-neutral-0], .nq-section-gap, [nq-section-gap])),
    &:where(.bg-neutral-100, [bg-neutral-100]):has(+ :where(section, [data-section]):where(.bg-darkblue, [bg-darkblue], .bg-neutral-0, [bg-neutral-0], .bg-darkerblue, [bg-darkerblue], .nq-section-gap, [nq-section-gap])),
    &:where(.bg-neutral-0, [bg-neutral-0], .bg-darkblue, [bg-darkblue], .bg-darkerblue, [bg-darkerblue]):has(+ :where(section, [data-section]):where(.bg-neutral-100, [bg-neutral-100], .nq-section-gap, [nq-section-gap])) {
      --pb: 160px;

      @media screen and (min-width: 1024px) {
        --pb: 200px;
      }
    }

    &:last-child {
      --pb: var(--pb, 32px);

      @media screen and (min-width: 1024px) {
        --pb: var(--pb, 48px);
      }
    }

    &[nq-overlaps] {
      --pb: 0;

      >* {
         --f-mb-min: 16;
         --f-mb-max: 32;
        z-index: 2;

        position: relative;
        bottom: calc(var( --f-mb) * -1);
      }

      + :where(section, [data-section]) {
         --f-pt-min: 16;
         --f-pt-max: 32;
        padding-top: calc(var( --f-pt) + var(--pt));
      }
    }
  }
}